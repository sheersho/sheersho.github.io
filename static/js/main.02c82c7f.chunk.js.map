{"version":3,"sources":["assets/straw_hat.png","components/nav-item/nav-item.component.jsx","components/header/header.component.jsx","assets/sheersho_unedited.png","components/skill-tag/skill-tag.component.jsx","components/skills/skills.component.jsx","components/profile-card/profile-card.component.jsx","components/social-link/social-link.component.jsx","components/socials/socials.component.jsx","pages/homepage/homepage.component.jsx","pages/blogs/blogs.component.jsx","components/project-info/project-info.component.jsx","components/project-meta/project-meta.component.jsx","components/project-container/project-container.component.jsx","pages/projects/projects.component.jsx","App.js","theme.js","index.js"],"names":["withRouter","itemName","routeUrl","location","as","marginLeft","base","md","href","target","rel","colorScheme","rightIcon","to","variant","pathname","navItems","page","Header","useColorMode","colorMode","toggleColorMode","avatarBgColor","useColorModeValue","justifyContent","flexWrap","height","marginBottom","align","src","strawHatPic","bg","name","size","map","navItem","onClick","FaMoon","FaSun","SkillTag","tag","borderRadius","cursor","_hover","transform","transition","tags","Skills","p","fontSize","fontWeight","templateColumns","sm","lg","gap","ProfileCard","useState","count","setCount","typedTextBgColor","typedTextColor","useEffect","mt","gridColumnGap","textAlign","alignSelf","profilePic","alt","paddingTop","show","hideWhenDone","onTypingDone","style","color","backgroundColor","padding","Backspace","delay","SociaLink","socialUrl","svgIcon","w","h","socialsInfo","FaGithubSquare","FaLinkedin","FaInstagramSquare","FaTwitterSquare","Socials","maxW","justify","socialInfo","HomePage","BlogsPage","state","blogs","axios","get","then","result","status","data","setState","error","this","length","id","rendered","date","title","link","_embedded","m","position","React","Component","ProjectInfo","description","paddingBottom","ProjectMeta","projectMeta","language","stargazers_count","forks_count","html_url","homepage","marginRight","GoStar","GoRepoForked","justifySelf","GoMarkGithub","GoLink","ProjectContainer","project","otherProps","bgGradient","ProjectsPage","projects","headers","Accept","repositoryResult","App","pt","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02c82c7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/straw_hat.4cb618e3.png\";","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FaExternalLinkAlt,FaYoutube } from 'react-icons/fa';\n\nconst NavItem = ({ itemName, routeUrl, location }) => {\n  return itemName == 'Resume' ?\n  (\n    <Button\n      as=\"a\"\n      marginLeft={{ base: '6px', md: '12px' }}\n      href={routeUrl}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      colorScheme=\"telegram\"\n      rightIcon={<FaExternalLinkAlt />}\n    >\n      {itemName}\n    </Button>\n  ) \n   : itemName == \"YouTube\"?\n  (\n    <Button\n      as=\"a\"\n      marginLeft={{ base: '6px', md: '12px' }}\n      href={routeUrl}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      colorScheme=\"red\"\n      rightIcon={<FaYoutube />}\n    >\n      {itemName}\n    </Button>\n  ):\n  (\n    <Link to={routeUrl}>\n      <Button\n        marginLeft={{ base: '6px', md: '12px' }}\n        variant={location.pathname === routeUrl ? 'outline' : 'solid'}\n      >\n        {itemName}\n      </Button>\n    </Link>\n  )\n};\n\nexport default withRouter(NavItem);\n","import React from 'react';\nimport {\n  Avatar,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  useColorMode,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { FaSun, FaMoon } from 'react-icons/fa';\n\nimport strawHatPic from '../../assets/straw_hat.png';\nimport NavItem from '../nav-item/nav-item.component';\n\nconst navItems = [\n  { page: 'YouTube', routeUrl: 'https://sh-ort.app/n4m5v' },\n  {\n    page: 'Resume',\n    routeUrl:\n      'https://sh-ort.app/3s2qx',\n  },\n];\n\nconst Header = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const avatarBgColor = useColorModeValue('gray.100', 'whiteAlpha');\n  return (\n    <Flex\n      justifyContent={{ base: 'center', md: 'space-between' }}\n      flexWrap=\"wrap\"\n    >\n      <Flex>\n        <Button height=\"52px\" marginBottom={{ base: '12px', md: '0' }}>\n          <Link to=\"/\">\n            <Flex align=\"center\">\n              <Avatar\n                src={strawHatPic}\n                bg={avatarBgColor}\n                name=\"Sheersho Pramanik\"\n              />\n              <Heading size=\"md\">Sheersho Pramanik</Heading>\n            </Flex>\n          </Link>\n        </Button>\n      </Flex>\n      <Flex align=\"center\">\n        {navItems.map((navItem) => (\n          <NavItem\n            key={navItem.page}\n            itemName={navItem.page}\n            routeUrl={navItem.routeUrl}\n          ></NavItem>\n        ))}\n        <Button\n          onClick={toggleColorMode}\n          marginLeft={{ base: '6px', md: '12px' }}\n        >\n          <Icon as={colorMode === 'light' ? FaMoon : FaSun} />\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/sheersho_unedited.31bd1674.png\";","import React from 'react';\nimport { Tag } from '@chakra-ui/react';\n\nconst SkillTag = ({ tag, colorScheme }) => {\n  return (\n    <Tag\n      size=\"lg\"\n      borderRadius=\"base\"\n      height=\"40px\"\n      cursor=\"pointer\"\n      justifyContent=\"center\"\n      colorScheme={colorScheme}\n      variant=\"outline\"\n      _hover={{\n        transform: 'translateX(2px)',\n        transition: 'all .2s',\n      }}\n    >\n      {tag}\n    </Tag>\n  );\n};\n\nexport default SkillTag;\n","import React from 'react';\nimport { Box, Grid, Text } from '@chakra-ui/react';\nimport SkillTag from '../skill-tag/skill-tag.component';\n\nconst tags = [\n  { name: 'ReactJS', colorScheme: 'blue' },\n  { name: 'JavaScript', colorScheme: 'gray' },\n  { name: 'HTML5', colorScheme: 'purple' },\n  { name: 'CSS3', colorScheme: 'red' },\n  { name: 'C# .NET', colorScheme: 'teal' },\n  { name: 'CI/CD', colorScheme: 'linkedin' },\n  { name: 'Cypress', colorScheme: 'blue' },\n  { name: 'Git', colorScheme: 'gray' },\n  { name: 'AWS', colorScheme: 'orange' },\n  { name: 'PHP', colorScheme: 'messenger' },\n];\n\nconst Skills = () => {\n  return (\n    <Box p={0}>\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        Skills:\n      </Text>\n      <br />\n\n      <Grid\n        templateColumns={{\n          base: 'repeat(2, 1fr)',\n          sm: 'repeat(3, 1fr)',\n          md: 'repeat(4, 1fr)',\n          lg: 'repeat(6, 1fr)',\n        }}\n        gap={3}\n      >\n        {tags.map((tag) => (\n          <SkillTag\n            key={tag.name}\n            tag={tag.name}\n            colorScheme={tag.colorScheme}\n          />\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Skills;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Grid,\n  GridItem,\n  Image,\n  Tag,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport Typist from 'react-typist';\n\nimport profilePic from '../../assets/sheersho_unedited.png';\nimport Skills from '../../components/skills/skills.component';\n\nconst ProfileCard = () => {\n  const [count, setCount] = useState(0);\n  const typedTextBgColor = useColorModeValue('#1da1f2', '#edf2f7');\n  const typedTextColor = useColorModeValue('#edf2f7', '#1da1f2');\n\n  useEffect(() => {\n    setCount(1);\n  }, [count]);\n\n  return (\n    \n    <Grid\n      templateColumns={{ base: '1fr', md: '2fr 2fr', lg: '1fr 3fr' }}\n      mt={10}\n      p={4}\n      gridColumnGap={10}\n      textAlign={{ base: 'center', md: 'inherit' }}\n    >\n      <GridItem alignSelf=\"center\">\n        <Image src={profilePic} borderRadius=\"full\" alt=\"Sheersho Pramanik\" />\n      </GridItem>\n      <GridItem paddingTop=\"30px\" alignSelf=\"center\">\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">\n          Hello !\n        </Text>\n        {count ? (\n          <Typist\n            cursor={{ show: false, hideWhenDone: true }}\n            onTypingDone={() => setCount(0)}\n          >\n            <span\n              style={{ fontSize: '24px', fontWeight: 'bold', color: '#1da1f2' }}\n            >\n              I am{' '}\n              <span\n                style={{\n                  backgroundColor: `${typedTextBgColor}`,\n                  padding: '4px',\n                  borderRadius: '5px',\n                  color: `${typedTextColor}`,\n                }}\n              >\n                Sheersho\n                <Typist.Backspace count={8} delay={1250} />\n                a Developer\n                <Typist.Backspace count={11} delay={1250} />\n                an YouTuber\n                <Typist.Backspace count={11} delay={1250} />\n                a Photographer\n              </span>\n            </span>\n          </Typist>\n        ) : (\n          ''\n        )}\n        <br />\n        <Text fontSize=\"lg\">\n          Passionate and creative Software Developer, Blogger from{' '}\n          <Tag fontSize=\"lg\" colorScheme=\"purple\">Gurugram, India</Tag>.\n        </Text>\n        <br />\n        <Text fontSize=\"lg\">\n          Incoming Associate Technology L2 at{' '}\n          <Tag fontSize=\"lg\" colorScheme=\"red\">Publicis Sapient </Tag>\n           handling Full Cycle development, APIs, Test Automation and DevOps stuff.\n        </Text>\n        <br />\n        <Skills/>\n        {/* <Text fontSize=\"lg\">\n          Apart from 9-5 job, I like to work on side projects and try to\n          constantly learn something new to improve my skillset. At present, I\n          am using React for my web projects and really enjoying it.\n        </Text> */}\n      </GridItem>\n      \n    </Grid>\n    \n  );\n};\n\nexport default ProfileCard;\n","import React from 'react';\nimport { Icon } from '@chakra-ui/react';\n\nconst SociaLink = ({ color, socialUrl, svgIcon }) => {\n  return (\n    <a href={socialUrl} target=\"_blank\" rel=\"noreferrer\">\n      <Icon\n        as={svgIcon}\n        w=\"50px\"\n        h=\"50px\"\n        _hover={{\n          transform: 'translateY(-2px)',\n          transition: 'all .2s',\n        }}\n        borderRadius=\"14px\"\n        color={`${color}`}\n      />\n    </a>\n  );\n};\n\nexport default SociaLink;\n","import React from 'react';\nimport { Box, Text, Flex } from '@chakra-ui/react';\n\nimport SociaLink from '../social-link/social-link.component';\n\nimport {\n  FaLinkedin,\n  FaMedium,\n  FaTwitterSquare,\n  FaGithubSquare,\n  FaYoutubeSquare,\n  FaInstagramSquare\n} from 'react-icons/fa';\n\nconst socialsInfo = [\n  {\n    name: 'github',\n    socialUrl: 'https://sh-ort.app/-0xmo',\n    svgIcon: FaGithubSquare,\n    color: 'black',\n  },\n  {\n    name: 'linkedin',\n    socialUrl: 'https://sh-ort.app/xm4mc',\n    svgIcon: FaLinkedin,\n    color: 'telegram.500',\n  },\n  {\n    name: 'instagram',\n    socialUrl: 'https://sh-ort.app/te8fv',\n    svgIcon: FaInstagramSquare,\n    color: 'red.400',\n  },\n  {\n    name: 'twitter',\n    socialUrl: 'https://twitter.com/sheersho',\n    svgIcon: FaTwitterSquare,\n    color: 'twitter.500',\n  }\n];\n\nconst Socials = () => {\n  return (\n    <Box p={4}>\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        You can find me on:\n      </Text>\n\n      <br />\n      <Flex maxW=\"240px\" justify=\"space-between\">\n        {socialsInfo.map((socialInfo) => (\n          <SociaLink\n            key={socialInfo.name}\n            color={socialInfo.color}\n            socialUrl={socialInfo.socialUrl}\n            svgIcon={socialInfo.svgIcon}\n          />\n        ))}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Socials;\n","import React from 'react';\nimport { Box } from '@chakra-ui/layout';\n\nimport ProfileCard from '../../components/profile-card/profile-card.component';\n\nimport Socials from '../../components/socials/socials.component';\n\nconst HomePage = () => {\n  return (\n    <Box>\n      <ProfileCard />\n      <Socials />\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport axios from 'axios';\nimport { Image } from '@chakra-ui/image';\nimport { Box, Grid } from '@chakra-ui/layout';\nimport { Spinner } from '@chakra-ui/spinner';\n\nclass BlogsPage extends React.Component {\n  state = {\n    blogs: [],\n  };\n\n  componentDidMount() {\n    try {\n      axios\n        .get(\n          'https://fullyunderstood.com/wp-json/wp/v2/posts?author=2&per_page=100&_embed'\n        )\n        .then((result) => {\n          if (result.status === 200 && result.data) {\n            this.setState({ blogs: result.data });\n          }\n        });\n    } catch (error) {}\n  }\n\n  render() {\n    const { blogs } = this.state;\n\n    return (\n      <Grid\n        mt={10}\n        p={4}\n        templateColumns={{\n          base: '1fr',\n          sm: 'repeat(2, 1fr)',\n          md: 'repeat(3, 1fr)',\n        }}\n        gap={3}\n      >\n        {blogs.length ? (\n          blogs.map(({ id, date, title: { rendered }, link, _embedded }) => (\n            <Box\n              key={id}\n              as=\"a\"\n              m={2}\n              href={link}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              position=\"relative\"\n              _hover={{\n                transform: 'translateY(-2px)',\n                transition: 'all .2s',\n              }}\n            >\n              <Image\n                src={_embedded['wp:featuredmedia'][0].link}\n                alt={rendered}\n                borderRadius=\"base\"\n              />\n              {/* <Box>\n                  <Text>{rendered}</Text>\n                  <Text>{new Date(date).toLocaleDateString('in')}</Text>\n                </Box> */}\n            </Box>\n          ))\n        ) : (\n          <Spinner />\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default BlogsPage;\n","import React from 'react';\nimport { GridItem, Heading, Text } from '@chakra-ui/layout';\n\nconst ProjectInfo = ({ name, description }) => {\n  return (\n    <GridItem alignSelf=\"start\">\n      <Heading\n        fontSize={{ base: '14px', md: '16px', lg: '18px' }}\n        paddingBottom=\"2px\"\n      >\n        {name}\n      </Heading>\n      <Text fontSize={{ base: '10px', md: '12px', lg: '13px' }}>\n        {description}\n      </Text>\n    </GridItem>\n  );\n};\n\nexport default ProjectInfo;\n","import React from 'react';\nimport { GoLink, GoMarkGithub, GoStar, GoRepoForked } from 'react-icons/go';\nimport { Grid, GridItem, Badge } from '@chakra-ui/layout';\nimport Icon from '@chakra-ui/icon';\n\nconst ProjectMeta = ({ projectMeta }) => {\n  const {\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n    homepage,\n  } = projectMeta;\n\n  return (\n    <GridItem alignSelf=\"end\">\n      <Grid templateColumns=\"2.4fr 1.6fr\">\n        <GridItem>\n          {language != null ? (\n            <Badge marginRight=\"4px\">{language}</Badge>\n          ) : null}\n          {stargazers_count >= 0 ? (\n            <span style={{ marginRight: '4px' }}>\n              <Icon as={GoStar} />\n              {stargazers_count}\n            </span>\n          ) : null}\n          {forks_count >= 0 ? (\n            <span style={{ marginRight: '4px' }}>\n              <Icon as={GoRepoForked} />\n              {forks_count}\n            </span>\n          ) : null}\n        </GridItem>\n        <GridItem justifySelf=\"end\">\n          <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n            <Icon as={GoMarkGithub} />\n          </a>\n          {homepage ? (\n            <a\n              href={homepage}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ marginLeft: '6px' }}\n            >\n              <Icon as={GoLink} />\n            </a>\n          ) : null}\n        </GridItem>\n      </Grid>\n    </GridItem>\n  );\n};\n\nexport default ProjectMeta;\n","import React from 'react';\nimport { Grid } from '@chakra-ui/layout';\n\nimport ProjectInfo from '../project-info/project-info.component';\nimport ProjectMeta from '../project-meta/project-meta.component';\n\nconst ProjectContainer = ({ project }) => {\n  const { name, description, ...otherProps } = project;\n  return (\n    <Grid\n      padding=\"8px\"\n      cursor=\"pointer\"\n      color=\"white\"\n      borderRadius=\"base\"\n      bgGradient=\"linear-gradient(135deg, rgba(38,159,233,1) 30%, rgba(11,86,170,1) 87%)\"\n      _hover={{\n        transform: 'translateY(-2px)',\n        transition: 'all .2s',\n      }}\n      height={{ base: '135px', md: '123px' }}\n    >\n      <ProjectInfo name={name} description={description} />\n      <ProjectMeta projectMeta={otherProps} />\n    </Grid>\n  );\n};\n\nexport default ProjectContainer;\n","import React from 'react';\nimport axios from 'axios';\nimport { Grid } from '@chakra-ui/layout';\nimport { Spinner } from '@chakra-ui/spinner';\nimport ProjectContainer from '../../components/project-container/project-container.component';\n\nclass ProjectsPage extends React.Component {\n  state = {\n    projects: [],\n  };\n\n  componentDidMount() {\n    try {\n      const repositoryRequestUrl =\n        'https://api.github.com/users/coder-shanks/repos?sort=updated&direction=desc';\n      const repositoryRequestConfig = {\n        headers: {\n          Accept: 'application/vnd.github.v3+json',\n        },\n      };\n\n      axios\n        .get(repositoryRequestUrl, repositoryRequestConfig)\n        .then((repositoryResult) => {\n          if (repositoryResult.status === 200 && repositoryResult.data) {\n            this.setState({ projects: repositoryResult.data });\n          }\n        });\n    } catch (error) {}\n  }\n\n  render() {\n    const { projects } = this.state;\n\n    return (\n      <Grid\n        mt={10}\n        p={4}\n        templateColumns={{\n          base: '1fr',\n          md: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n        }}\n        gap={3}\n      >\n        {projects.length ? (\n          projects.map((project) => (\n            <ProjectContainer key={project.id} project={project} />\n          ))\n        ) : (\n          <Spinner />\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default ProjectsPage;\n","import React from 'react';\nimport { Container } from '@chakra-ui/react';\nimport { Switch, Route } from 'react-router';\n\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport BlogsPage from './pages/blogs/blogs.component';\nimport ProjectsPage from './pages/projects/projects.component';\n\nfunction App() {\n  return (\n    <Container maxW=\"container.xl\" pt={4}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/blogs\" component={BlogsPage} />\n        <Route path=\"/projects\" component={ProjectsPage} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\n\n// Add color mode config\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\n// Extend the theme\nconst theme = extendTheme({ config });\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\n\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}